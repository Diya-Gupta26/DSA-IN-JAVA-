// insertion from head 
class Node
{
  int value;
  Node next;

    Node (int num)
  {
	value = num;
	next = null;

  }

}
class SLL
{
  Node head;
  Node tail;

    SLL ()
  {
	head = tail = null;
  }


  void insertAtHead (int num)	// insertion from head 
  {
	Node n1 = new Node (num);

	if (head == null)
	  {
		head = tail = n1;
	  }

	else
	  {
		n1.next = head;
		head = n1;
	  }

  }
  void insertAtTail (int num)
  {
	Node n1 = new Node (num);

	if (head == null)
	  {
		head = tail = n1;
	  }

	else
	  {
		tail.next = n1;
		tail = n1;
	  }
  }
  void Traverse ()
  {
	Node temp = head;

	if (head == null)
	  {
		return;
	  }
	while (temp != null)
	  {
		System.out.println (temp.value);
		temp = temp.next;
	  }

  }
  void DeleteAtHead ()
  {
	if (head == null)
	  {
		return;
	  }
	else if (head == tail)
	  {
		head = tail = null;
	  }

	else
	  {
		head = head.next;
		  }
  }

  void DeleteAtTail ()
  {
	Node temp = head;

	if (head == null)
	  {
		return;
	  }
	else if (head == tail)
	  {
		head = tail = null;
	  }
	else
	  {
		while (temp.next != tail)
		  {
			temp = temp.next;
		  }
		temp.next = null;
		tail = temp;
	  }
  }
  boolean Search (int num)		//searching
  {
	Node temp = head;
	if (head == null)
	  {
		return false;
	  }
	while (temp != null)
	  {
		if (temp.value == num)

		  return true;
		temp = temp.next;
	  }
	return false;
  }

  void sum ()					//sum of data of nodes
  {
	Node temp = head;
	int total = 0;

	if (head == null)
	  return;

	while (temp != null)
	  {
		total += temp.value;
		temp = temp.next;
	  }
	System.out.println ("The sum is " + total);

  }
  void tableOf2 ()				//table of 2
  {
	Node temp = head;

	for (int i = 2; i <= 22; i += 2)
	  {
		temp.value = i;

		System.out.println (temp.value);
		temp = temp.next;
	  }
    }
}

public class Main
{
  public static void main (String[]args)
  {
	SLL l1 = new SLL ();

 
	  l1.insertAtTail (10);
	  l1.insertAtTail (20);
	  l1.insertAtTail (30);


	  l1.tableOf2 ();


  }
}
